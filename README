Examples:
--------
wget:
./get_qualscreened_file.py  https://airsl2.gesdisc.eosdis.nasa.gov/data//Aqua_AIRS_Level2/AIRS2RET.006/2018/123/AIRS.2018.05.03.203.L2.RetStd_IR.v6.0.31.0.G18124130912.hdf
./get_qualscreened_file.py -u https://airsl2.gesdisc.eosdis.nasa.gov/data//Aqua_AIRS_Level2/AIRS2RET.006/2018/123/AIRS.2018.05.03.203.L2.RetStd_IR.v6.0.31.0.G18124130912.hdf
./get_qualscreened_file.py -w https://airsl2.gesdisc.eosdis.nasa.gov/data//Aqua_AIRS_Level2/AIRS2RET.006/2018/123/AIRS.2018.05.03.061.L2.RetStd_IR.v6.0.31.0.G18123140509.hdf
curl:
./get_qualscreened_file.py -c https://airsl2.gesdisc.eosdis.nasa.gov/data//Aqua_AIRS_Level2/AIRS2RET.006/2018/123/AIRS.2018.05.03.061.L2.RetStd_IR.v6.0.31.0.G18123140509.hdf
file:
1. ./get_qualscreened_file.py -f https://airsl2.gesdisc.eosdis.nasa.gov/data//Aqua_AIRS_Level2/AIRS2RET.006/2018/123/AIRS.2018.05.03.171.L2.RetStd_IR.v6.0.31.0.G18124120854.hdf
2a.  wget -i AIRS.2018.05.03.171.L2.QCSUBRETSTD_IR.v6.0.31.0.G18124120854.nc.request -O AIRS.2018.05.03.171.L2.QCSUBRETSTD_IR.v6.0.31.0.G18124120854.nc 
2b. cut and paste the url into a brower.



Usage:
------
USAGE: ./get_qualscreened_file.py -u URL [-f storeRequestFilename] [-c useCurl] [-w usewget] (default)
-u is the url of the file you want to quality screen. The only mandatory argument
-f is used to write out your request to a file if this program's use of wget or curl is not working for you
-c use curl for request
-w use wget for request

Overview:
---------
VariableSelection.py is a configuration file
get_qualscreened_file.py is the main, driver script

Output Format Selection:
-----------------------
NetCDF or HDF
To set this selection, use DQSS_FORMAT in VariableSelection.py

Product Assignment:
-------------------
AIRX2RET, AIRS2RET, or AIRH2RET
To set this selection, use PRODUCT_SHORTNAME in VariableSelection.py
 
All of the variables can be used with AIRX2RET, and AIRH2RET.

Those that are not in AIRS2RET are commented like:
  "totH2OMWOnlyStd",         # Moisture * not in AIRS
If you receive a 404 message, this may be the reason.

Variables:
----------
To run DQSS on a variable(s), edit VariableSelection.py,
cut and paste the variable,comma and comment from the
donotinclude() section to the best, good, or noscreening sections(tuples)

Example:
Have this snippet from the VariableSelection.py change from

best=(
  )

donotinclude(
# Moisture:16 
  "totH2OStd",               # Moisture
  "H2OMMRSat",               # Moisture
  "RelHumSurf",              # Moisture
  "totH2OMWOnlyStd",         # Moisture * not in AIRS
....
)

change to: --->

best=(
  "totH2OStd",               # Moisture
  "H2OMMRSat",               # Moisture
  "RelHumSurf",              # Moisture
  "totH2OMWOnlyStd",         # Moisture * not in AIRS
  )

donotinclude(
# Moisture:16 
....
)

This will screen these four variables accordingly.
use ancillary_include() and ancillary_donotinclude() in a similar fashion.


The comments are there to help the user restore the configuration file, VariableSelection.py, 
to it's original state.


These items are displayed and should correspond to your selections:
best:                   1
good:                   0
noscreening:            0
donotinclude:           40
ancillary include:         10
ancillary donotinclude:    49
Sanity checks:
screenable should be:41 and is:41
ancillary  should be:59 and is:59

